name: CI

on:
  push:
    branches:
      - master
      - develop

  pull_request:
    branches:
      - master
      - develop

jobs:
  health-check:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get changed files
        uses: dorny/paths-filter@v2
        id: filter
        with:
          list-files: shell
          filters: |
            python:  
              - added|modified: "services/rest/**/*.py"

      - name: Set up Python 3.10
        if: ${{ steps.filter.outputs.python == 'true' }}
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.0
          architecture: x64
          cache: 'pip'

      - name: Install dependencies
        if: ${{ steps.filter.outputs.python == 'true' }}
        working-directory: services/rest
        run: pip install -r requirements-dev.txt

      - name: Run flake8
        if: ${{ steps.filter.outputs.python == 'true' }}
        working-directory: services/rest
        run: flake8

      - name: Run tests
        if: ${{ steps.filter.outputs.python == 'true' }}
        env:
          DJANGO_SECRET_KEY: test-secret-key
          DJANGO_DB_TEST_NAME: test_db
          DJANGO_DB_USER: postgres
          DJANGO_DB_PASSWORD: postgres
          DJANGO_DB_HOST: localhost
          DJANGO_DB_PORT: 5432
        working-directory: services/rest
        run: coverage run manage.py test

      - name: Generate coverage report
        if: ${{ steps.filter.outputs.python == 'true' }}
        working-directory: services/rest
        run: coverage xml

      - name: Publish coverage report
        if: ${{ steps.filter.outputs.python == 'true' }}
        uses: codecov/codecov-action@v3
        with:
          files: services/rest/coverage.xml